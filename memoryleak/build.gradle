apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.simple.memoryleak"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}

//project.gradle.addListener(new BuildTimeListener())
//
//public class BuildTimeListener implements TaskExecutionListener, BuildListener {
//    private Clock clock
//    private times = []
//
//    @Override
//    void beforeExecute(Task task) {
//        clock = new org.gradle.util.Clock()
//    }
//
//    @Override
//    void afterExecute(Task task, TaskState taskState) {
//        def ms = clock.timeInMs
//        times.add([ms, task.path])
//
//        //task.project.logger.warn "${task.path} spend ${ms}ms"
//    }
//
//    @Override
//    void buildStarted(Gradle gradle) {
//
//    }
//
//    @Override
//    void settingsEvaluated(Settings settings) {
//
//    }
//
//    @Override
//    void projectsLoaded(Gradle gradle) {
//
//    }
//
//    @Override
//    void projectsEvaluated(Gradle gradle) {
//
//    }
//
//    @Override
//    void buildFinished(BuildResult result) {
//        println "Task spend time:"
//        for (time in times) {
//            if (time[0] >= 50) {
//                printf "%7sms  %s\n", time
//            }
//        }
//    }
//}
